# Техническое задание для бэктеста стратегии TSMOM

## 1. Цель проекта
Разработать и провести бэктест стратегии Time Series Momentum (TSMOM) на основе подхода, описанного в статье Московица, Оои и Педерсена (2012), для оценки ее эффективности на исторических данных.

## 2. Описание стратегии
- **Тип стратегии**: Time Series Momentum (TSMOM).
- **Суть**: Открытие длинных позиций для активов с положительным моментумом и коротких позиций для активов с отрицательным моментумом на основе доходности за смотровой период.
- **Смотровой период**: 12 месяцев.
- **Период удержания**: 1 месяц.
- **Управление рисками**: Нормализация позиций по обратной волатильности актива (целевая волатильность портфеля — 40% годовых).
- **Ребалансировка**: Ежемесячная.

## 3. Требования к данным
- **Классы активов**: Фьючерсы на акции (индексы), облигации, валюты, сырьевые товары (не менее 20 инструментов).
- **Период данных**: С 2000 года по настоящее время (или максимально доступный).
- **Источник данных**: Bloomberg, Quandl, Yahoo Finance или другие надежные источники.
- **Тип данных**: Дневные/месячные цены закрытия, скорректированные на сплиты и дивиденды.

## 4. Задачи специалиста
1. **Сбор данных**:
   - Загрузить исторические данные цен для выбранных активов.
   - Проверить данные на наличие пропусков, аномалий и скорректировать их при необходимости.
2. **Расчет моментума**:
   - Для каждого актива вычислить доходность за 12-месячный смотровой период.
   - Определить сигналы: положительный моментум — длинная позиция, отрицательный — короткая.
3. **Управление рисками**:
   - Рассчитать историческую волатильность каждого актива (например, за последние 3 месяца).
   - Нормализовать размер позиции по формуле:  
     \[
     \text{Размер позиции} = \frac{40\%}{\text{Историческая волатильность актива}}
     \]
4. **Бэктест**:
   - Реализовать стратегию в среде программирования (Python).
   - Провести симуляцию торгов с ежемесячной ребалансировкой.
   - Учесть транзакционные издержки (например, 0.1% на сделку).
5. **Анализ результатов**:
   - Рассчитать ключевые метрики: доходность, коэффициент Шарпа, максимальная просадка, волатильность портфеля.
   - Построить графики: кумулятивная доходность, просадки, распределение доходностей.
6. **Отчет**:
   - Подготовить краткий отчет (5–10 страниц) с описанием методологии, результатами и выводами.
   - Включить сравнение с бенчмарком (например, индекс S&P 500).

## 5. Технические требования
- **Язык программирования**: Python (предпочтительно с библиотеками pandas, numpy, matplotlib, backtest.py).
- **Формат вывода**:
   - Код с комментариями на английском.
   - Графики в формате PNG с описанием на английском.
   - Отчет в формате Markdown на англйиском.

## 6. Дополнительно
- Провести чувствительный анализ для разных смотровых периодов (3, 6, 12 месяцев).
- Учесть возможность оптимизации параметров (например, целевой волатильности).

## 7. Критерии приемки
- Корректность расчетов моментума и позиций.
- Полнота и чистота используемых данных.
- Наличие всех требуемых метрик и графиков.
- Четкий и структурированный отчет.